// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#ifndef PROTOBUF_packet_2eproto__INCLUDED
#define PROTOBUF_packet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "packet_def.pb.h"
// @@protoc_insertion_point(includes)
class AckCreateAccount;
class AckCreateAccountDefaultTypeInternal;
extern AckCreateAccountDefaultTypeInternal _AckCreateAccount_default_instance_;
class AckLogin;
class AckLoginDefaultTypeInternal;
extern AckLoginDefaultTypeInternal _AckLogin_default_instance_;
class ReqCreateAccount;
class ReqCreateAccountDefaultTypeInternal;
extern ReqCreateAccountDefaultTypeInternal _ReqCreateAccount_default_instance_;
class ReqLogin;
class ReqLoginDefaultTypeInternal;
extern ReqLoginDefaultTypeInternal _ReqLogin_default_instance_;

namespace protobuf_packet_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_packet_2eproto

// ===================================================================

class ReqLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqLogin) */ {
 public:
  ReqLogin();
  virtual ~ReqLogin();

  ReqLogin(const ReqLogin& from);

  inline ReqLogin& operator=(const ReqLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqLogin(ReqLogin&& from) noexcept
    : ReqLogin() {
    *this = ::std::move(from);
  }

  inline ReqLogin& operator=(ReqLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLogin& default_instance();

  static inline const ReqLogin* internal_default_instance() {
    return reinterpret_cast<const ReqLogin*>(
               &_ReqLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ReqLogin* other);
  friend void swap(ReqLogin& a, ReqLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqLogin& from);
  void MergeFrom(const ReqLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes passwd = 2;
  void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const void* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // @@protoc_insertion_point(class_scope:ReqLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  mutable int _cached_size_;
  friend struct protobuf_packet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AckLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AckLogin) */ {
 public:
  AckLogin();
  virtual ~AckLogin();

  AckLogin(const AckLogin& from);

  inline AckLogin& operator=(const AckLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AckLogin(AckLogin&& from) noexcept
    : AckLogin() {
    *this = ::std::move(from);
  }

  inline AckLogin& operator=(AckLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AckLogin& default_instance();

  static inline const AckLogin* internal_default_instance() {
    return reinterpret_cast<const AckLogin*>(
               &_AckLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AckLogin* other);
  friend void swap(AckLogin& a, AckLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AckLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  AckLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AckLogin& from);
  void MergeFrom(const AckLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AckLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .RetLogin result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::RetLogin result() const;
  void set_result(::RetLogin value);

  // .RetError error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::RetError error() const;
  void set_error(::RetError value);

  // @@protoc_insertion_point(class_scope:AckLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  int error_;
  mutable int _cached_size_;
  friend struct protobuf_packet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqCreateAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqCreateAccount) */ {
 public:
  ReqCreateAccount();
  virtual ~ReqCreateAccount();

  ReqCreateAccount(const ReqCreateAccount& from);

  inline ReqCreateAccount& operator=(const ReqCreateAccount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCreateAccount(ReqCreateAccount&& from) noexcept
    : ReqCreateAccount() {
    *this = ::std::move(from);
  }

  inline ReqCreateAccount& operator=(ReqCreateAccount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCreateAccount& default_instance();

  static inline const ReqCreateAccount* internal_default_instance() {
    return reinterpret_cast<const ReqCreateAccount*>(
               &_ReqCreateAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ReqCreateAccount* other);
  friend void swap(ReqCreateAccount& a, ReqCreateAccount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCreateAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqCreateAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqCreateAccount& from);
  void MergeFrom(const ReqCreateAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqCreateAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string passwd = 2;
  void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // @@protoc_insertion_point(class_scope:ReqCreateAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  mutable int _cached_size_;
  friend struct protobuf_packet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AckCreateAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AckCreateAccount) */ {
 public:
  AckCreateAccount();
  virtual ~AckCreateAccount();

  AckCreateAccount(const AckCreateAccount& from);

  inline AckCreateAccount& operator=(const AckCreateAccount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AckCreateAccount(AckCreateAccount&& from) noexcept
    : AckCreateAccount() {
    *this = ::std::move(from);
  }

  inline AckCreateAccount& operator=(AckCreateAccount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AckCreateAccount& default_instance();

  static inline const AckCreateAccount* internal_default_instance() {
    return reinterpret_cast<const AckCreateAccount*>(
               &_AckCreateAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AckCreateAccount* other);
  friend void swap(AckCreateAccount& a, AckCreateAccount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AckCreateAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  AckCreateAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AckCreateAccount& from);
  void MergeFrom(const AckCreateAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AckCreateAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:AckCreateAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool result_;
  mutable int _cached_size_;
  friend struct protobuf_packet_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqLogin

// bytes name = 1;
inline void ReqLogin::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqLogin::name() const {
  // @@protoc_insertion_point(field_get:ReqLogin.name)
  return name_.GetNoArena();
}
inline void ReqLogin::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqLogin.name)
}
#if LANG_CXX11
inline void ReqLogin::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ReqLogin.name)
}
#endif
inline void ReqLogin::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqLogin.name)
}
inline void ReqLogin::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqLogin.name)
}
inline ::std::string* ReqLogin::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ReqLogin.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqLogin::release_name() {
  // @@protoc_insertion_point(field_release:ReqLogin.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLogin::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ReqLogin.name)
}

// bytes passwd = 2;
inline void ReqLogin::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqLogin::passwd() const {
  // @@protoc_insertion_point(field_get:ReqLogin.passwd)
  return passwd_.GetNoArena();
}
inline void ReqLogin::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqLogin.passwd)
}
#if LANG_CXX11
inline void ReqLogin::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ReqLogin.passwd)
}
#endif
inline void ReqLogin::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqLogin.passwd)
}
inline void ReqLogin::set_passwd(const void* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqLogin.passwd)
}
inline ::std::string* ReqLogin::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:ReqLogin.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqLogin::release_passwd() {
  // @@protoc_insertion_point(field_release:ReqLogin.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLogin::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:ReqLogin.passwd)
}

// -------------------------------------------------------------------

// AckLogin

// .RetLogin result = 1;
inline void AckLogin::clear_result() {
  result_ = 0;
}
inline ::RetLogin AckLogin::result() const {
  // @@protoc_insertion_point(field_get:AckLogin.result)
  return static_cast< ::RetLogin >(result_);
}
inline void AckLogin::set_result(::RetLogin value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:AckLogin.result)
}

// .RetError error = 2;
inline void AckLogin::clear_error() {
  error_ = 0;
}
inline ::RetError AckLogin::error() const {
  // @@protoc_insertion_point(field_get:AckLogin.error)
  return static_cast< ::RetError >(error_);
}
inline void AckLogin::set_error(::RetError value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:AckLogin.error)
}

// -------------------------------------------------------------------

// ReqCreateAccount

// string name = 1;
inline void ReqCreateAccount::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqCreateAccount::name() const {
  // @@protoc_insertion_point(field_get:ReqCreateAccount.name)
  return name_.GetNoArena();
}
inline void ReqCreateAccount::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqCreateAccount.name)
}
#if LANG_CXX11
inline void ReqCreateAccount::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ReqCreateAccount.name)
}
#endif
inline void ReqCreateAccount::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqCreateAccount.name)
}
inline void ReqCreateAccount::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqCreateAccount.name)
}
inline ::std::string* ReqCreateAccount::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ReqCreateAccount.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqCreateAccount::release_name() {
  // @@protoc_insertion_point(field_release:ReqCreateAccount.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateAccount::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ReqCreateAccount.name)
}

// string passwd = 2;
inline void ReqCreateAccount::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqCreateAccount::passwd() const {
  // @@protoc_insertion_point(field_get:ReqCreateAccount.passwd)
  return passwd_.GetNoArena();
}
inline void ReqCreateAccount::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqCreateAccount.passwd)
}
#if LANG_CXX11
inline void ReqCreateAccount::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ReqCreateAccount.passwd)
}
#endif
inline void ReqCreateAccount::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqCreateAccount.passwd)
}
inline void ReqCreateAccount::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqCreateAccount.passwd)
}
inline ::std::string* ReqCreateAccount::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:ReqCreateAccount.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqCreateAccount::release_passwd() {
  // @@protoc_insertion_point(field_release:ReqCreateAccount.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateAccount::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:ReqCreateAccount.passwd)
}

// -------------------------------------------------------------------

// AckCreateAccount

// bool result = 1;
inline void AckCreateAccount::clear_result() {
  result_ = false;
}
inline bool AckCreateAccount::result() const {
  // @@protoc_insertion_point(field_get:AckCreateAccount.result)
  return result_;
}
inline void AckCreateAccount::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:AckCreateAccount.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_packet_2eproto__INCLUDED
